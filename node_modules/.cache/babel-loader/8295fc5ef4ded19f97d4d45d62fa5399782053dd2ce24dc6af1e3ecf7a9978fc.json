{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\react\\\\test-app\\\\src\\\\components\\\\render\\\\main_page\\\\FlowerOptions.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { CartItemsContext } from \"../../../context/CartContext\";\nimport flowers from \"../../flowerslist/flowersList\";\nimport { ObjectContext } from \"../../../context/ObjectContext\";\nimport { CART_RENDER_ACTION_TYPE } from \"../../../redusers/cartOrderRender\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FlowerOptions = () => {\n  _s();\n  const {\n    cartValue,\n    setCartValue\n  } = useContext(CartItemsContext);\n  const {\n    cartRender,\n    dispatchRender\n  } = useContext(ObjectContext);\n  const [work, setWork] = useState({\n    ...flowers.map(el => {\n      return el.prise.option_0;\n    })\n  });\n  const toggleFormCostchange = e => {\n    e.preventDefault();\n    const selectElements = [...document.querySelectorAll(\"select\")];\n    const selectedEl = selectElements.indexOf(e.target);\n    const selectedElIndex = selectElements[selectedEl].selectedIndex;\n    let selectedCostChanged = work[selectedEl] = flowers[selectedEl][\"prise\"][`option_${selectedElIndex}`];\n    setWork({\n      ...work,\n      selectedCostChanged\n    });\n  };\n  const toggleClickAddtocart = e => {\n    var _cartRender$find;\n    const selectElementsSelected = [...document.querySelectorAll(\"select\")];\n    const selectElements = [...document.querySelectorAll(\".buttonHolder button:first-child\")];\n    const selectedEl = selectElements.indexOf(e.target);\n    const workCostSrt = work[selectedEl];\n    const dispatchData = flowers.find(i => i.id === selectedEl);\n    const dispatchDataProved = (_cartRender$find = cartRender.find(i => i.id === selectedEl)) === null || _cartRender$find === void 0 ? void 0 : _cartRender$find.id;\n    const selectElementsSelectedId = selectElementsSelected[selectedEl].selectedIndex;\n    setCartValue({\n      cartItem: cartValue.cartItem + 1,\n      cartCost: cartValue.cartCost + workCostSrt\n    });\n    if (dispatchDataProved !== selectedEl) {\n      dispatchRender({\n        type: CART_RENDER_ACTION_TYPE.ADDING_NEW_POS,\n        cart_Object: {\n          id: selectedEl,\n          quantity: {\n            ...Object.keys(dispatchData.options).map((el, ind) => {\n              if (ind === selectElementsSelectedId) {\n                return el = 1;\n              } else {\n                return el = 0;\n              }\n            })\n          }\n        }\n      });\n    } else {\n      dispatchRender({\n        type: CART_RENDER_ACTION_TYPE.CHANGE_QUANTITY,\n        cart_Object: {\n          id: selectedEl,\n          quantity: selectElementsSelectedId\n        }\n      });\n    }\n  };\n  const toggleClickBuyNow = () => {\n    document.querySelector(\"dialog\").showModal();\n  };\n  return flowers.map(element => {\n    let bouquetOption = Object.entries(element.options);\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"ChoosingFlowers__container__section\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: element.img_src,\n        alt: element.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"ChoosingFlowers__container__section__part--top\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: work[element.id] + \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"ChoosingFlowers__container__section__part--bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onChange: toggleFormCostchange,\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"NumberOfflowers\",\n              className: \"ChoosingFlowers__container__section__select\",\n              children: bouquetOption.map((el, number) => {\n                let bouquet = el[1];\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: bouquet,\n                  children: bouquet\n                }, number, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonHolder\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"buttonHolder__toCart\",\n              onClick: toggleClickAddtocart,\n              children: \"To cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleClickBuyNow,\n              children: \"Buy now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, element.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  });\n};\n_s(FlowerOptions, \"4bNffO0986eUMank6fuqKTU7YRQ=\");\n_c = FlowerOptions;\nvar _c;\n$RefreshReg$(_c, \"FlowerOptions\");","map":{"version":3,"names":["React","useContext","useState","CartItemsContext","flowers","ObjectContext","CART_RENDER_ACTION_TYPE","jsxDEV","_jsxDEV","FlowerOptions","_s","cartValue","setCartValue","cartRender","dispatchRender","work","setWork","map","el","prise","option_0","toggleFormCostchange","e","preventDefault","selectElements","document","querySelectorAll","selectedEl","indexOf","target","selectedElIndex","selectedIndex","selectedCostChanged","toggleClickAddtocart","_cartRender$find","selectElementsSelected","workCostSrt","dispatchData","find","i","id","dispatchDataProved","selectElementsSelectedId","cartItem","cartCost","type","ADDING_NEW_POS","cart_Object","quantity","Object","keys","options","ind","CHANGE_QUANTITY","toggleClickBuyNow","querySelector","showModal","element","bouquetOption","entries","className","children","src","img_src","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","onChange","number","bouquet","value","onClick","_c","$RefreshReg$"],"sources":["E:/Sites/react/test-app/src/components/render/main_page/FlowerOptions.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { CartItemsContext } from \"../../../context/CartContext\";\r\nimport flowers from \"../../flowerslist/flowersList\";\r\nimport { ObjectContext } from \"../../../context/ObjectContext\";\r\nimport { CART_RENDER_ACTION_TYPE } from \"../../../redusers/cartOrderRender\";\r\n\r\nexport const FlowerOptions = () => {\r\n  const { cartValue, setCartValue } = useContext(CartItemsContext);\r\n  const { cartRender, dispatchRender } = useContext(ObjectContext);\r\n\r\n  const [work, setWork] = useState({\r\n    ...flowers.map((el) => {\r\n      return el.prise.option_0;\r\n    }),\r\n  });\r\n\r\n  const toggleFormCostchange = (e) => {\r\n    e.preventDefault();\r\n\r\n    const selectElements = [...document.querySelectorAll(\"select\")];\r\n    const selectedEl = selectElements.indexOf(e.target);\r\n    const selectedElIndex = selectElements[selectedEl].selectedIndex;\r\n\r\n    let selectedCostChanged = (work[selectedEl] =\r\n      flowers[selectedEl][\"prise\"][`option_${selectedElIndex}`]);\r\n    setWork({ ...work, selectedCostChanged });\r\n  };\r\n\r\n  const toggleClickAddtocart = (e) => {\r\n    const selectElementsSelected = [...document.querySelectorAll(\"select\")];\r\n    const selectElements = [\r\n      ...document.querySelectorAll(\".buttonHolder button:first-child\"),\r\n    ];\r\n    const selectedEl = selectElements.indexOf(e.target);\r\n    const workCostSrt = work[selectedEl];\r\n    const dispatchData = flowers.find((i) => i.id === selectedEl);\r\n    const dispatchDataProved = cartRender.find((i) => i.id === selectedEl)?.id;\r\n    const selectElementsSelectedId =\r\n      selectElementsSelected[selectedEl].selectedIndex;\r\n\r\n    setCartValue({\r\n      cartItem: cartValue.cartItem + 1,\r\n      cartCost: cartValue.cartCost + workCostSrt,\r\n    });\r\n\r\n    if (dispatchDataProved !== selectedEl) {\r\n      dispatchRender({\r\n        type: CART_RENDER_ACTION_TYPE.ADDING_NEW_POS,\r\n        cart_Object: {\r\n          id: selectedEl,\r\n          quantity: {\r\n            ...Object.keys(dispatchData.options).map((el, ind) => {\r\n              if (ind === selectElementsSelectedId) {\r\n                return (el = 1);\r\n              } else {\r\n                return (el = 0);\r\n              }\r\n            }),\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      dispatchRender({\r\n        type: CART_RENDER_ACTION_TYPE.CHANGE_QUANTITY,\r\n        cart_Object: {\r\n          id: selectedEl,\r\n          quantity: selectElementsSelectedId,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggleClickBuyNow = () => {\r\n    document.querySelector(\"dialog\").showModal();\r\n  };\r\n\r\n  return flowers.map((element) => {\r\n    let bouquetOption = Object.entries(element.options);\r\n\r\n    return (\r\n      <article className=\"ChoosingFlowers__container__section\" key={element.id}>\r\n        <img src={element.img_src} alt={element.name} />\r\n        <div>\r\n          <section className=\"ChoosingFlowers__container__section__part--top\">\r\n            <span>{element.name}</span>\r\n            <span>{work[element.id] + \"$\"}</span>\r\n          </section>\r\n          <section className=\"ChoosingFlowers__container__section__part--bottom\">\r\n            <form onChange={toggleFormCostchange}>\r\n              <select\r\n                name=\"NumberOfflowers\"\r\n                className=\"ChoosingFlowers__container__section__select\"\r\n              >\r\n                {bouquetOption.map((el, number) => {\r\n                  let bouquet = el[1];\r\n\r\n                  return (\r\n                    <option key={number} value={bouquet}>\r\n                      {bouquet}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </form>\r\n            <div className=\"buttonHolder\">\r\n              <button\r\n                className=\"buttonHolder__toCart\"\r\n                onClick={toggleClickAddtocart}\r\n              >\r\n                To cash\r\n              </button>\r\n              <button onClick={toggleClickBuyNow}>Buy now</button>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </article>\r\n    );\r\n  });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}